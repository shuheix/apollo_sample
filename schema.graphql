type Channel implements Node {
  createdAt: ISO8601DateTime!
  id: ID!
  messageCount: Int!
  messages: [Message!]!
  name: String!
  updatedAt: ISO8601DateTime!
}

"""
Autogenerated input type of CreateChannel
"""
input CreateChannelInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  workspaceId: ID!
}

"""
Autogenerated return type of CreateChannel.
"""
type CreateChannelPayload {
  channel: Channel!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated input type of CreateMessage
"""
input CreateMessageInput {
  channelId: ID!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  content: String!
}

"""
Autogenerated return type of CreateMessage.
"""
type CreateMessagePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  message: Message!
}

"""
Autogenerated input type of CreateWorkspace
"""
input CreateWorkspaceInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  name: String!
}

"""
Autogenerated return type of CreateWorkspace.
"""
type CreateWorkspacePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  workspace: Workspace!
}

"""
An ISO 8601-encoded datetime
"""
scalar ISO8601DateTime @specifiedBy(url: "https://tools.ietf.org/html/rfc3339")

type Message implements Node {
  content: String!
  createdAt: ISO8601DateTime!
  id: ID!
  updatedAt: ISO8601DateTime!
}

"""
Autogenerated return type of MessageReceived.
"""
type MessageReceivedPayload {
  count: Int!
}

type Mutation {
  createChannel(
    """
    Parameters for CreateChannel
    """
    input: CreateChannelInput!
  ): CreateChannelPayload
  createMessage(
    """
    Parameters for CreateMessage
    """
    input: CreateMessageInput!
  ): CreateMessagePayload
  createWorkspace(
    """
    Parameters for CreateWorkspace
    """
    input: CreateWorkspaceInput!
  ): CreateWorkspacePayload
}

"""
An object with an ID.
"""
interface Node {
  """
  ID of the object.
  """
  id: ID!
}

type Query {
  channels: [Channel!]!

  """
  Fetches an object given its ID.
  """
  node(
    """
    ID of the object.
    """
    id: ID!
  ): Node

  """
  Fetches a list of objects given a list of IDs.
  """
  nodes(
    """
    IDs of the objects.
    """
    ids: [ID!]!
  ): [Node]!
  workspaces: [Workspace!]!
}

type Subscription {
  messageReceived: MessageReceivedPayload!
}

type Workspace implements Node {
  channels: [Channel!]!
  createdAt: ISO8601DateTime!
  id: ID!
  name: String!
  updatedAt: ISO8601DateTime!
}
